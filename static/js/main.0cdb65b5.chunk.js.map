{"version":3,"sources":["components/Navbar.js","views/Home.js","views/Proyects.js","views/About.js","views/Skills.js","views/Contact.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Navbar","react_default","a","createElement","className","react_router_dom","to","process","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","Home","Fragment","src","logo","alt","Proyects","About","Skills","Contact","App","components_Navbar","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.0cdb65b5.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nfunction Navbar() {\n    return (\n\n        <div>\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <Link to={process.env.PUBLIC_URL + '/'} className=\"navbar-brand\"><span className=\"colorOne\">STEFANY GUEVARA</span></Link>\n\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n                    <div className=\"navbar-nav\">\n                        <a className=\"nav-item nav-link active\" href=\"/Home\">Home</a>\n                        <a className=\"nav-item nav-link active\" href=\"/Proyects\">Proyects</a>\n                        <a className=\"nav-item nav-link active\" href=\"/About\">About</a>\n                        <a className=\"nav-item nav-link active\" href=\"/Skills\">Skills</a>\n                        <a className=\"nav-item nav-link active\" href=\"/Contact\">Contact</a>\n                    </div>\n                </div>\n            </nav>\n\n\n        </div>\n    );\n}\n\nexport default Navbar;","import React from 'react';\nimport logo from '../logo.svg';\n\nfunction Home() {\n    return (\n        <>\n            <div>\n\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n                <h1>HOME EN CONSTRUCCION</h1>\n\n            </div>\n\n        </>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport logo from '../logo.svg';\n\nfunction Proyects() {\n    return (\n        <>\n            <div>\n\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n                <h1>PROYECTS EN CONSTRUCCION</h1>\n\n            </div>\n\n        </>\n    );\n}\n\nexport default Proyects;","import React from 'react';\nimport logo from '../logo.svg';\n\nfunction About() {\n    return (\n        <>\n            <div>\n\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n                <h1>ABOUT EN CONSTRUCCION</h1>\n\n            </div>\n\n        </>\n    );\n}\n\nexport default About;","import React from 'react';\nimport logo from '../logo.svg';\n\nfunction Skills() {\n    return (\n        <>\n            <div>\n\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n                <h1>SKILLS EN CONSTRUCCION</h1>\n\n            </div>\n\n        </>\n    );\n}\n\nexport default Skills;","import React from 'react';\nimport logo from '../logo.svg';\n\nfunction Contact() {\n    return (\n        <>\n            <div>\n\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n                <h1>CONTACT EN CONSTRUCCION</h1>\n\n            </div>\n\n        </>\n    );\n}\n\nexport default Contact;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Home from './views/Home';\nimport Proyects from './views/Proyects';\nimport About from './views/About';\nimport Skills from './views/Skills'\nimport Contact from './views/Contact';\n\n\nfunction App() {\n  return (\n    <>\n    <BrowserRouter>\n      <header >\n        <Navbar />\n      </header>\n      <div className=\"App\">\n      </div>\n      \n        <Switch>\n          <Route exact path={process.env.PUBLIC_URL + '/'} component={Home} />\n          <Route exact path=\"/Home\" component={Home} />\n          <Route exact path=\"/Proyects\" component={Proyects} />\n          <Route exact path=\"/About\" component={About} />\n          <Route exact path=\"/Skills\" component={Skills} />\n          <Route exact path=\"/Contact\" component={Contact} />\n        </Switch>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}